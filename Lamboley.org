#+TITLE: Lucas Lamboley's Emacs configuration
#+PROPERTY: header-args:emacs-lisp :tangle "~/.emacs.d/init.el"

* About this file
** What is this file

This file is a org file used by =org-mode= from Emacs.

** How to use this file for configure Emacs ?
   
You have to create the configuration file using
=M-x org-babel-tangle= (=C-c C-v t=). This will produce
the =~/.emacs.d/init.el= used by Emacs. Using this method allow
us to write a tidy configuration using =org-mode= without
loading the entire org file.

* Configuration
** Emacs's top header package

This is necessary for flycheck, he will throw an error if it is 
not there.

#+BEGIN_SRC emacs-lisp
;;; init.el --- Emacs configuration
;;; Commentary:
;;; Code:
#+END_SRC

** Starting up
*** Configuring packages

We use =use-package= to isolate package configuration
for better performance at startup time. =use-package= can also
download a package if he is not present locally.
 
#+BEGIN_SRC emacs-lisp
(package-initialize)
(add-to-list 'package-archives '("melpa-stable" . "https://stable.melpa.org/packages/") t)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
(add-to-list 'package-archives '("org" . "https://orgmode.org/elpa/") t)

(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

(eval-when-compile
  (require 'use-package))

(setq use-package-verbose t)
(setq use-package-always-ensure t)
#+END_SRC

*** Benchmark 

#+BEGIN_SRC emacs-lisp
(defun my/show-startup-time ()
  "Show Emacs's startup time in the minibuffer"
  (message "Startup time: %s seconds."
    (emacs-uptime "%s")))
(add-hook 'emacs-startup-hook 'my/show-startup-time 'append)
#+END_SRC

*** Libraries

#+BEGIN_SRC emacs-lisp
(use-package diminish)
#+END_SRC

*** Custom file

#+BEGIN_SRC emacs-lisp
(setq custom-file (expand-file-name "custom.el" user-emacs-directory))
(when (file-exists-p custom-file)
  (load custom-file 'noerror))
#+END_SRC

** Packages
*** IDO - Interactive Do Things

#+BEGIN_SRC emacs-lisp
(use-package ido
  :diminish ido-mode
  :init
  (progn
    (setq ido-enable-flex-matching t
          ido-everywhere t)
    (ido-mode 1)))
#+END_SRC

** Generic configuration
*** Hide GUI parts

#+BEGIN_SRC emacs-lisp
(if (fboundp 'menu-bar-mode) (menu-bar-mode -1))
(if (fboundp 'tool-bar-mode) (tool-bar-mode -1))
(if (fboundp 'scroll-bar-mode) (scroll-bar-mode -1))
#+END_SRC

*** Backup, save and lock files

#+BEGIN_SRC emacs-lisp
(setq backup-directory-alist 
  `(("." . ,(expand-file-name (concat user-emacs-directory "backup")))))

(setq delete-old-versions -1)
(setq version-control t)
(setq vc-make-backup-files t)
(setq auto-save-file-name-transforms 
  `((".*" ,(expand-file-name (concat user-emacs-directory "auto-save-list")) t)))

(setq create-lockfiles nil)
#+END_SRC

*** History

From http://www.wisdomandwonder.com/wp-content/uploads/2014/03/C3F.html:
#+BEGIN_SRC emacs-lisp
(setq savehist-file (expand-file-name (concat user-emacs-directory "savehist")))
(savehist-mode 1)
(setq history-length t)
(setq history-delete-duplicates t)
(setq savehist-save-minibuffer-history 1)
(setq savehist-additional-variables '(kill-ring search-ring regexp-search-ring))
#+END_SRC

*** Miscellaneous

Remove useless =*scratch*= buffer.

#+BEGIN_SRC emacs-lisp
(if (get-buffer "*scratch*") (kill-buffer "*scratch*"))
#+END_SRC

Always the use y-or-n over yes-or-no because I am lazy.

#+BEGIN_SRC emacs-lisp
(defalias 'yes-or-no-p 'y-or-n-p)
#+END_SRC

Show date and time in the =mode-line=.

#+BEGIN_SRC emacs-lisp
(setq display-time-day-and-date t
      display-time-24hr-format t)
(display-time)
#+END_SRC

Show matching pairs of parantheses and other characters.

#+BEGIN_SRC emacs-lisp
(show-paren-mode 1)
#+END_SRC

Show line numbers.

#+BEGIN_SRC emacs-lisp
(when (version<= "26.0.50" emacs-version )
  (global-display-line-numbers-mode))
#+END_SRC

Show column number in =mode-line=.

#+BEGIN_SRC emacs-lisp
(column-number-mode 1)
#+END_SRC

** Emacs's bottom header package

Also necessary for flycheck.

#+BEGIN_SRC emacs-lisp
;;; init.el ends here
#+END_SRC
