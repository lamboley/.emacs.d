#+TITLE: Lucas Lamboley's Emacs configuration
#+PROPERTY: header-args:emacs-lisp :tangle "~/.emacs.d/init.el"

* About this file
** What is this file

This file is a org file used by =org-mode= from Emacs.

** How to use this file for configure Emacs ?

You have to create the configuration file using
=M-x org-babel-tangle= (=C-c C-v t=). This will produce
the =~/.emacs.d/init.el= used by Emacs. Using this method allow
us to write a tidy configuration using =org-mode= without
loading the entire org file.

* Configuration
** Emacs's top header package

This is necessary for flycheck, he will throw an error if it is 
not there.

#+BEGIN_SRC emacs-lisp
;;; init.el --- Emacs configuration
;;; Commentary:
;;; Code:
#+END_SRC

** Starting up
*** Configuring packages

We use =use-package= to isolate package configuration
for better performance at startup time. =use-package= can also
download a package if he is not present locally.
 
#+BEGIN_SRC emacs-lisp
(package-initialize)
(add-to-list 'package-archives '("melpa-stable" . "https://stable.melpa.org/packages/") t)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
(add-to-list 'package-archives '("org" . "https://orgmode.org/elpa/") t)

(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

(eval-when-compile
  (require 'use-package))

(setq use-package-verbose t)
(setq use-package-always-ensure t)
#+END_SRC

*** Benchmark 

#+BEGIN_SRC emacs-lisp
(defun my/show-startup-time ()
  "Show Emacs's startup time in the minibuffer"
  (message "Startup time: %s seconds." (emacs-uptime "%s")))

(add-hook 'emacs-startup-hook 'my/show-startup-time 'append)
#+END_SRC

*** Custom file

#+BEGIN_SRC emacs-lisp
(setq custom-file (expand-file-name "custom.el" user-emacs-directory))
(when (file-exists-p custom-file)
  (load custom-file 'noerror))
#+END_SRC

** Generic configuration
*** Backup and save

#+BEGIN_SRC emacs-lisp
(setq backup-directory-alist 
  `(("." . ,(expand-file-name (concat user-emacs-directory "backup")))))

(setq delete-old-versions -1)
(setq version-control t)
(setq vc-make-backup-files t)
(setq auto-save-file-name-transforms 
  `((".*" ,(expand-file-name (concat user-emacs-directory "auto-save-list")) t)))
#+END_SRC

** Emacs's bottom header package

#+BEGIN_SRC emacs-lisp
;;; init.el ends here
#+END_SRC
